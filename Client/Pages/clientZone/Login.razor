@page "/Cliente/Login"
@using Agapea_Blazor.Client
@using Agapea_Blazor.Client.Models.Services.Interfaces
@inject IJSRuntime jsService
@inject IRestService restService
@inject IStorageService storageService
@inject NavigationManager navigate

<div class="container pt-5">
    <div class="row">
        <div class="col-7 pt-3">
            <h2>Registrate en <strong>agapea.com</strong></h2>
            <p>
                Regístrate en
                agapea.com
                y disfruta de todos sus beneficios y comodidades.
            </p>

            <div class="m-4">
                <a class="btn btn-primary btn-lg" onclick="@(() => this.navigate.NavigateTo("/Cliente/Registro"))">Registrate</a>
            </div>

            <p class="mt-4"><b>Crea tus propias listas de libros</b> (<a href="">Consultar información</a>)</p>

            <div class="d-flex justify-content-center mt-5">
                <img src="/img/login-agapea.png" />
            </div>
        </div>
        <div class="col-5 bg-light p-4 border">

            <div asp-validation-summary="All" class="text-danger"></div>

            <EditForm Model="Creds" OnValidSubmit="LoginClient">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <h4>Identifícate con:</h4>

                <p><img src="img/shelby-login.jpg" alt="" width="173" height="110"></p>

                <div class="form-floating m-1">
                    <input type="email" class="form-control" id="Email" placeholder="Mi usuario"
                           @bind-value="Creds.email"/>
                    <label for="floatingInput">Email</label>
                </div>

                <div class="form-floating m-1">
                    <input type="password" class="form-control" id="Contraseña" placeholder="Contraseña" @bind-value="Creds.password" />
                    <label for="floatingPassword"><small>Contraseña</small></label>
                </div>

                <div class="mt-2 ml-1">
                    <a href=""><small class="text-mutted">¿Has olvidado tu contraseña?</small></a>
                </div>

                <button class="m-4 btn btn-lg btn-primary" type="submit">Identifícate</button>

                <div class="ml-1">
                    <p class="text-muted">Al identificarte, aceptas nuestras <a class="text-muted" href="">Condiciones de uso, y nuestras condiciones de cookies</a></p>
                </div>
            </EditForm>
        </div>
    </div>

</div>

@code {
    // PRUEBAS : cunnst@gmail.com     123sql
    public Cuenta Creds { get; set; } = new Cuenta();
    private Cliente _logger { get; set; } = new Cliente();
    public async Task LoginClient()
    {
        await jsService.InvokeVoidAsync("console.log","credenciales a enviar...", Creds);

        RestMessage _resp = await this.restService.LoginClient(Creds);

        if (_resp.Code == 0)
        {
            //almacenamos datos recibidos desde el servicio asp.net core en STORAGE (localStorage, indexeddb)
            //o en un servicio usando observables

            //............PARA INDEXEDDB :
            // await this.storageService.StoreJWTAsync(_resp.SessionToken);
            // await this.storageService.StoreClientDataAsync((Cliente)_resp.ClientData);

            //............PARA LOCALSTORAGE, SUBJECT :
            _logger = (Cliente)_resp.ClientData!;
            await jsService.InvokeVoidAsync("console.log", "CLIENTE LOGEANDO...", _logger);
                this.storageService.StoreClientData(_logger);
                this.storageService.StoreJWT(_resp.SessionToken);

                this.navigate.NavigateTo("/Tienda/Libros");

        }
        else
        {
         //mostrar mensajes de error del login en vista...
            await jsService.InvokeVoidAsync("console.log", "ERROR GARRAFAL EN SERVICIO ASP.NET CORE: ",_resp.Error);
        }

    }
}
